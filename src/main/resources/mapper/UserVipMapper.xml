<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.pack.store.mapper.UserVipMapper">
    <select id="queryBindingMember" resultType="com.alibaba.fastjson.JSONObject" parameterType="org.pack.store.requestVo.BindMemberReq">
        select id,user_id,member_id,vip_type,vip_name,card_no
        from t_user_vip where 1=1
        <if test="userId !=null and userId !=''">
            and user_id =#{userId}
        </if>
        <if test="memberType !=null and memberType !=''">
            and vip_type =#{memberType}
        </if>
    </select>

    <insert id="addBindingMember" parameterType="com.alibaba.fastjson.JSONObject" >
        insert into t_user_vip (id,user_id,member_id, vip_type,vip_name,card_no,ts)
        values (#{id,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},#{memberId,jdbcType=VARCHAR}, #{vipType,jdbcType=VARCHAR},
          #{vipName,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, now())
    </insert>

    <select id="queryMyMembership" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
        SELECT v.id,v.user_id userId,v.vip_type vipType,v.vip_name vipName,v.card_no cardNo,
        m.amount,DATE_FORMAT(m.start_time,'%Y-%m-%d') startTime,
        DATE_FORMAT(m.end_time,'%Y-%m-%d') endTime
         FROM t_user_vip v LEFT JOIN t_membership m ON v.member_id=m.id WHERE v.user_id=#{userId}
    </select>

    <delete id="deleteBindingMember" parameterType="java.lang.String">
        DELETE FROM t_user_vip WHERE id =#{memberId}
    </delete>
    <select id="queryIsBinding" resultType="com.alibaba.fastjson.JSONObject" parameterType="org.pack.store.requestVo.BindMemberReq">
        select id,user_id,member_id,vip_type,vip_name,card_no
        from t_user_vip where vip_type=#{memberType} and card_no =#{cardNo}
    </select>

    <insert id="addAccountInfo" parameterType="com.alibaba.fastjson.JSONObject">
        insert into t_account (id,user_id,balance, integral,ts)
        values (#{id,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},#{balance,jdbcType=DECIMAL}, #{integral,jdbcType=SMALLINT},now())
    </insert>

    <select id="queryBannerList" resultType="com.alibaba.fastjson.JSONObject">
        SELECT banner_url FROM t_banner WHERE dr=0
    </select>

    <select id="queryMyAccount" resultType="com.alibaba.fastjson.JSONObject" parameterType="java.lang.String">
        select user_id userId,balance,integral from t_account where user_id =#{userId}
    </select>

    <select id="queryMyMemberAcount" resultType="com.alibaba.fastjson.JSONObject" parameterType="java.lang.String">
        SELECT m.amount FROM t_user_vip u LEFT JOIN t_membership m ON u.card_no=m.card_no WHERE u.user_id=#{userId} AND u.vip_name='会员卡'
    </select>


    <select id="queryUserInfo" resultType="com.alibaba.fastjson.JSONObject" parameterType="java.lang.String">
        SELECT user_id userId,mobile FROM t_user u WHERE open_id=#{openId}
    </select>
	<select id="queryMyXiaoFeiJuan" resultType="com.alibaba.fastjson.JSONObject" parameterType="java.lang.String">
        SELECT m.amount FROM t_user_vip u LEFT JOIN t_membership m ON u.card_no=m.card_no WHERE u.user_id=#{userId} AND u.vip_name='消费卡'
    </select>

    <select id="queryMyMemberInfo" resultType="com.alibaba.fastjson.JSONObject" parameterType="java.lang.String">
        SELECT m.id,m.card_no cardNo FROM t_user_vip u LEFT JOIN t_membership m ON u.card_no=m.card_no WHERE u.user_id=#{userId} AND u.vip_name='会员卡'
    </select>

    <update id="updateAcountBalance" parameterType="com.alibaba.fastjson.JSONObject">
        update t_account set balance=balance-#{amount} where user_id=#{userId} and balance-#{amount} > 0
    </update>

    <!--提现流水-->
    <insert id="insertTransactionDetail" parameterType="com.alibaba.fastjson.JSONObject">
        INSERT INTO t_transaction_detail (
        id,
        user_id,
        amount,
        status,
        in_out,
        remark,
        ts
    )
    VALUES
        (
            #{id},#{userId},#{amount},#{status},#{inOut},#{remark},now())
    </insert>
</mapper>